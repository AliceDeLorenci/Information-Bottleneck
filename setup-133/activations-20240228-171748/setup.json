{
"dataset": "mnist",
"train_ratio": 0.8571428571428571,
"hidden_dims": [
1024,
20,
20,
20
],
"output_dim": 10,
"hidden_activation_f": "lambda input: F.relu(input)                      # activation function for the hidden layers\n",
"hidden_activation": "relu",
"output_activation_f": "lambda input: F.log_softmax( input, dim=1 )      # activation function for the output layer\n",
"output_activation": "log_softmax",
"lr": 0.001,
"momentum": 0.9,
"optimizer": "lambda parameters: torch.optim.SGD( parameters, lr=setup[\"lr\"], momentum=setup[\"momentum\"] )\n",
"n_epochs": 10000,
"batch_size": 1024,
"loss_function": "lambda output, target, reduction='mean': F.nll_loss(output, target, reduction=reduction)\n",
"evaluate_correct": "lambda output, target: torch.sum( output.argmax(dim=1) == target, dtype=torch.float32 )\n"
}